
main
init(){
    factory.regist()
    poll.init()
}
poll //server fd
accpet(){
    buff = read(serverfd)
    obj = createobj(buff)
    sub = choosesub()
    sub.get(event,eventfd_event,obj)
    sub.awake()
} read->  obj and event eventfd_event ->choose and add sub.poll->eventfd
creatobj()
createEvent()
choose()
addtosub()
//add_subs and add_threads or remove
awake(){
    eventfd//可以不执行
}
p_queue<sub> subs
threadpool(subs.start())
threadpool(accpet)
--------------------------------------


sub
start()
{
    while(true)
    {
        fds = waitpoll()
        for(fd:fds)
            threadpool + core.doit(obj,events[fd])
    }
}
obj&
events[maxfd]//vector<event>
awake(){
    //加锁
    write(eventfd)
}
<class e...>
get(evnet...,obj &){

}
poll
threadpool(doit)
core
doit(event&,obj&){
    event.lock()
    while(over)
    {
        dowhat = factory[event.status];
        dowhat!=nullptr
        dowhat(obj);
    }
}

-------------------------------------------------
factory
regist()
get()
op[]
map<status,handle>

--------------------------------------------------

obj
status//4xx 2xx
head
body
